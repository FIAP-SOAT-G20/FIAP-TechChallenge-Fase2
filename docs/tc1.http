# Test with HTTP Rest extension for VS Code 
# https://marketplace.visualstudio.com/items?itemName=humao.rest-client

@baseUrl = http://localhost:8080
@num = 6
@name = John Doe {{num}}
@email = john.doe.{{num}}@email.com
@cpf = 123.456.789-0{{num}}


# @name healthCheck
GET {{baseUrl}}/health HTTP/1.1

@healthStatus = {{healthCheck.response.body.status}}

###


# @name createCustomer
POST {{baseUrl}}/api/v1/customers/ HTTP/1.1
Content-Type: application/json

{
    "name": "{{name}}",
    "email": "{{email}}",
    "cpf": "{{cpf}}"
}

@customerId = {{createCustomer.response.body.id}}

###

# @name getCustomer
GET {{baseUrl}}/api/v1/customers/{{customerId}} HTTP/1.1

###

# @name signIn
POST {{baseUrl}}/api/v1/sign-in HTTP/1.1

{
    "cpf": "{{cpf}}"
}

###

# @name getProducts
GET {{baseUrl}}/api/v1/products HTTP/1.1

###

# @name createProduct
POST {{baseUrl}}/api/v1/products HTTP/1.1
Content-Type: application/json

{
    "name": "Product X",
    "description": "Product X description",
    "price": 13,
    "category_id": 1,
		"active": true
}

@productId = {{createProduct.response.body.id}}

###

# @name getProduct
GET {{baseUrl}}/api/v1/products/{{productId}} HTTP/1.1

###

# @name updateProduct
PUT {{baseUrl}}/api/v1/products/{{productId}} HTTP/1.1

{
    "name": "Product X UPDATED",
    "description": "Product X description UPDATED",
    "price": 13,
    "category_id": 1,
    "active": false
}

###

# @name getProduct
GET {{baseUrl}}/api/v1/products/{{productId}} HTTP/1.1

###

# @name getProducts
GET {{baseUrl}}/api/v1/products HTTP/1.1

###

# @name deleteProduct
DELETE {{baseUrl}}/api/v1/products/{{productId}} HTTP/1.1

###

# @name getProducts
GET {{baseUrl}}/api/v1/products HTTP/1.1

###

# @name getProductsByCategory
GET {{baseUrl}}/api/v1/products?category_id=1 HTTP/1.1

###

# @name getOrders
GET {{baseUrl}}/api/v1/orders HTTP/1.1

###

# @name createOrder
POST {{baseUrl}}/api/v1/orders HTTP/1.1
Content-Type: application/json

{
    "customer_id": {{customerId}}
}

@orderId = {{createOrder.response.body.id}}

###

# @name getOrder
GET {{baseUrl}}/api/v1/orders/{{orderId}} HTTP/1.1

###

# @name addProduct1ToOrder
POST {{baseUrl}}/api/v1/orders/products/{{orderId}}/1 HTTP/1.1

{
  "quantity": 2
}

###

# @name getOrder
GET {{baseUrl}}/api/v1/orders/{{orderId}} HTTP/1.1


###

# @name checkout
POST {{baseUrl}}/api/v1/payments/{{orderId}}/checkout HTTP/1.1

@paymentId = {{checkout.response.body.id}}
@paymentResource = {{checkout.response.body.external_payment_id}}

###

# @name confirmPayment
POST {{baseUrl}}/api/v1/payments/callback HTTP/1.1

{
    "resource": "{{paymentResource}}",
    "topic": "payment"
}

###

# @name getOrders
GET {{baseUrl}}/api/v1/orders HTTP/1.1

###

# @name getOrder
GET {{baseUrl}}/api/v1/orders/{{orderId}} HTTP/1.1

###

# @name updateOrderStatus
PATCH {{baseUrl}}/api/v1/orders/{{orderId}} HTTP/1.1

{
    "status": "PENDING"
}

###

# @name getOrder
GET {{baseUrl}}/api/v1/orders/{{orderId}} HTTP/1.1

###

# @name updateOrderStatus2
PATCH {{baseUrl}}/api/v1/orders/{{orderId}} HTTP/1.1

{
    "status": "RECEIVED"
}

### 

# @name getOrder
GET {{baseUrl}}/api/v1/orders/{{orderId}} HTTP/1.1

###

# @name updateOrderStatusWithStaff
PATCH {{baseUrl}}/api/v1/orders/{{orderId}} HTTP/1.1

{
    "staff_id": 1,
    "status": "PREPARING"
}

### 

# @name getOrder
GET {{baseUrl}}/api/v1/orders/{{orderId}} HTTP/1.1

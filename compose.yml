services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: go-clean-arch-app
    ports:
      - "8080:8080"
    env_file:
      - .env
    environment:
      - DB_HOST=postgres
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - go-clean-arch-network
    restart: unless-stopped

  postgres:
    image: postgres:17-alpine3.21
    container_name: go-clean-arch-postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=products
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - go-clean-arch-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4
    container_name: go-clean-arch-pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - go-clean-arch-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  go-clean-arch-network:
    driver: bridge

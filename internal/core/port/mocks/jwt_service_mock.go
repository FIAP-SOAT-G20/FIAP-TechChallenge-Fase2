// Code generated by MockGen. DO NOT EDIT.
// Source: internal/core/port/jwt_service_port.go
//
// Generated by this command:
//
//	mockgen -source=internal/core/port/jwt_service_port.go -destination=internal/core/port/mocks/jwt_service_mock.go
//

// Package mock_port is a generated GoMock package.
package mock_port

import (
	reflect "reflect"
	time "time"

	gomock "go.uber.org/mock/gomock"
)

// MockJWTService is a mock of JWTService interface.
type MockJWTService struct {
	ctrl     *gomock.Controller
	recorder *MockJWTServiceMockRecorder
	isgomock struct{}
}

// MockJWTServiceMockRecorder is the mock recorder for MockJWTService.
type MockJWTServiceMockRecorder struct {
	mock *MockJWTService
}

// NewMockJWTService creates a new mock instance.
func NewMockJWTService(ctrl *gomock.Controller) *MockJWTService {
	mock := &MockJWTService{ctrl: ctrl}
	mock.recorder = &MockJWTServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockJWTService) EXPECT() *MockJWTServiceMockRecorder {
	return m.recorder
}

// ExtractClaims mocks base method.
func (m *MockJWTService) ExtractClaims(token string) (uint64, string, string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ExtractClaims", token)
	ret0, _ := ret[0].(uint64)
	ret1, _ := ret[1].(string)
	ret2, _ := ret[2].(string)
	ret3, _ := ret[3].(error)
	return ret0, ret1, ret2, ret3
}

// ExtractClaims indicates an expected call of ExtractClaims.
func (mr *MockJWTServiceMockRecorder) ExtractClaims(token any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExtractClaims", reflect.TypeOf((*MockJWTService)(nil).ExtractClaims), token)
}

// GenerateToken mocks base method.
func (m *MockJWTService) GenerateToken(customerID uint64, cpf, name string, expiresIn time.Duration) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateToken", customerID, cpf, name, expiresIn)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateToken indicates an expected call of GenerateToken.
func (mr *MockJWTServiceMockRecorder) GenerateToken(customerID, cpf, name, expiresIn any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateToken", reflect.TypeOf((*MockJWTService)(nil).GenerateToken), customerID, cpf, name, expiresIn)
}

// ValidateToken mocks base method.
func (m *MockJWTService) ValidateToken(token string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateToken", token)
	ret0, _ := ret[0].(error)
	return ret0
}

// ValidateToken indicates an expected call of ValidateToken.
func (mr *MockJWTServiceMockRecorder) ValidateToken(token any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateToken", reflect.TypeOf((*MockJWTService)(nil).ValidateToken), token)
}

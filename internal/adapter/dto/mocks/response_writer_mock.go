// Code generated by MockGen. DO NOT EDIT.
// Source: internal/adapter/dto/response_writer.go

// Package mock_dto is a generated GoMock package.
package mock_dto

import (
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "github.com/golang/mock/gomock"
)

// MockResponseWriter is a mock of ResponseWriter interface.
type MockResponseWriter struct {
	ctrl     *gomock.Controller
	recorder *MockResponseWriterMockRecorder
}

// MockResponseWriterMockRecorder is the mock recorder for MockResponseWriter.
type MockResponseWriterMockRecorder struct {
	mock *MockResponseWriter
}

// NewMockResponseWriter creates a new mock instance.
func NewMockResponseWriter(ctrl *gomock.Controller) *MockResponseWriter {
	mock := &MockResponseWriter{ctrl: ctrl}
	mock.recorder = &MockResponseWriterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockResponseWriter) EXPECT() *MockResponseWriterMockRecorder {
	return m.recorder
}

// Error mocks base method.
func (m *MockResponseWriter) Error(err error) *gin.Error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Error", err)
	ret0, _ := ret[0].(*gin.Error)
	return ret0
}

// Error indicates an expected call of Error.
func (mr *MockResponseWriterMockRecorder) Error(err interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Error", reflect.TypeOf((*MockResponseWriter)(nil).Error), err)
}

// JSON mocks base method.
func (m *MockResponseWriter) JSON(statusCode int, obj any) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "JSON", statusCode, obj)
}

// JSON indicates an expected call of JSON.
func (mr *MockResponseWriterMockRecorder) JSON(statusCode, obj interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "JSON", reflect.TypeOf((*MockResponseWriter)(nil).JSON), statusCode, obj)
}

// XML mocks base method.
func (m *MockResponseWriter) XML(statusCode int, obj any) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "XML", statusCode, obj)
}

// XML indicates an expected call of XML.
func (mr *MockResponseWriterMockRecorder) XML(statusCode, obj interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "XML", reflect.TypeOf((*MockResponseWriter)(nil).XML), statusCode, obj)
}
